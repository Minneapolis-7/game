@use 'sass:math';

.input {
  position: relative;
}
.input[data-display='inline'] {
  display: inline-flex;
  flex-wrap: wrap;
}

.input__field {
  @include field-base;
  @include field-skin;

  display: block;
  width: 100%;
  border-radius: 0;
  cursor: text;

  // https://stackoverflow.com/questions/2918707/turn-off-iphone-safari-input-element-rounding
  -webkit-appearance: none;
}
textarea.input__field:not([data-fixed]) {
  height: auto;
}
.input[data-display='inline'] > .input__field {
  flex-grow: 0;
  flex-shrink: 0;
}
/* stylelint-disable no-descending-specificity */
.has-error > .input__field {
  @include field_invalid;
}
.input__field:disabled {
  @include disabled;
}
/* stylelint-enable no-descending-specificity */

.input__hint,
.input__field::placeholder {
  overflow: hidden;
  color: $field-placeholder-color;
  text-overflow: ellipsis;
  white-space: nowrap;
  opacity: 1;
}
.input__field_mode_floating::placeholder {
  color: transparent;
}

$input-hint-float-scale: 0.85;
$input-hint-float-shift: math.div($field-line-height, 2) * 1em;
$input-hint-font-size: $field-font-size;
@mixin input-field-transform($gap-x) {
  transform: scale($input-hint-float-scale)
    translateY(
      calc(
        -1 * (#{$input-hint-font-size} * #{$input-hint-float-scale} - #{math.div(
                $field-line-height,
                4
              ) * 1em})
      )
    )
    translateX(
      calc(
        ((1 - #{$input-hint-float-scale}) * 1em) * #{math.clamp(
            0,
            math.ceil(strip-units($gap-x)),
            1
          )}
      )
    );
}

.input__hint,
.input__spacer {
  @include field-base;
}
.input__hint {
  position: absolute;
  top: 0;
  left: 0;
  z-index: $z-index-primary;
  font-size: $input-hint-font-size;
  pointer-events: none;
}

.input__field_mode_floating ~ .input__hint {
  transition: transform $transition-duration;
  transform: scale(1);
  transform-origin: top left;
  will-change: transform;
}
.input__field_mode_floating:focus ~ .input__hint,
.input__field_mode_floating:not(:placeholder-shown) ~ .input__hint,
.input__field_mode_floating:-webkit-autofill ~ .input__hint {
  @include input-field-transform($field-gap-x);
}

$input-error-line-height: 1.3em;
.input > .error {
  position: absolute;
  top: 100%;
  right: 0;
  left: 0;
  display: none;
  width: 100%;
}
.input[data-display='inline'] > .input > .error {
  position: absolute;
  top: 100%;
  right: 0;
  left: 0;
  margin-top: -$input-error-line-height;
}
/* stylelint-disable no-descending-specificity */
.has-error.input > .error {
  display: block;
}
/* stylelint-enable no-descending-specificity */

.input__spacer {
  flex-grow: 0;
  flex-shrink: 0;
  height: 0;
  padding: 0;
  visibility: hidden;
}
/* stylelint-disable no-descending-specificity */
// Темы
.input_theme_dumb-example > .input__field {
  @include field-base_theme_dumb-example;
  @include field-skin_theme_dumb-example;
}
.input_theme_dumb-example > .input__hint {
  @include field-base_theme_dumb-example;
}
.input_theme_dumb-example > .input__field_mode_floating:focus ~ .input__hint,
.input_theme_dumb-example > .input__field_mode_floating:not(:placeholder-shown) ~ .input__hint {
  @include input-field-transform($field-gap-x_theme_dumb-example);
}

.input_theme_transparent > .input__field {
  @include field-base_theme_transparent;
  @include field-skin_theme_transparent;
}
.input_theme_transparent > .input__hint {
  @include field-base_theme_transparent;
}

// ...больше тем здесь

/* stylelint-enable no-descending-specificity */

// "Сдвиг" подсказки по умолчанию, располагается в конце для возможности переопределить стили модификаций
.input__field_mode_floating:focus,
.input__field_mode_floating:not(:placeholder-shown) {
  padding-top: calc(#{$field-gap-y} + #{$input-hint-float-shift});
  padding-bottom: calc(#{$field-gap-y} - #{$input-hint-float-shift});
}

/* stylelint-disable no-descending-specificity */
// Размеры (все размерности шрифтозависимы, потому можно просто поменять `font-size`)
.input_sizing_sm > .input__field,
.input_sizing_sm > .input__hint {
  @include field-base_sizing_sm;
}
.input_sizing_lg > .input__field,
.input_sizing_lg > .input__hint {
  @include field-base_sizing_lg;
}
.input_sizing_xl > .input__field,
.input_sizing_xl > .input__hint {
  @include field-base_sizing_xl;
}
/* stylelint-enable no-descending-specificity */
