@use 'sass:math';
@use 'src/css/abstracts/variables' as *;
@use 'src/css/abstracts/mixins' as *;

$button-height: $field-height;
$button-text-color: $dark-color;

.button {
  @include button-reset;

  height: $button-height;
  padding: 0 1.15em;
  border: none;
  background-color: $brand-color;
  color: $button-text-color;
  line-height: 1;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
}
.button::-moz-focus-inner {
  border: 0;
}
.button:-moz-focusring {
  outline-width: 0;
}

.button:not(:disabled):hover,
.button:not(:disabled):focus-visible {
  background-color: darken(desaturate($brand-color, 2.66), 5.49);
}
/* stylelint-disable no-descending-specificity */
.button:disabled {
  @include disabled;
}
/* stylelint-enable no-descending-specificity */

.button[data-display='block'] {
  display: block;
  width: 100%;
}
.button[data-display='inline'],
.button[data-display='inline'] .button__text {
  vertical-align: baseline;
}

.button__icon > * {
  position: relative;
  top: 0.066666667em;
  display: inline-block;
}
.button__icon > svg {
  width: 1em;
  height: 1em;
}
.button__icon > svg,
.button__icon > svg path {
  fill: currentColor;
}

/* stylelint-disable no-descending-specificity */
.button__icon,
.button__text {
  position: relative;
  z-index: $z-index-primary;
  display: inline-block;
  vertical-align: top;
  min-height: 100%;
  line-height: $button-height;
}

.button__icon + .button__text,
.button__text + .button__icon {
  margin-left: 0.334em;
}
/* stylelint-enable no-descending-specificity */

// для вертикального выравнивания в строке `.button__text` всегда должен содержать текст, даже если текста нет
// вставим "zero-width space"
.button__text::after {
  content: '\200b';
}
.button__icon + .button__text:empty,
.button__text:empty + .button__icon {
  margin-left: 0;
}

.button.is-processing .button__icon,
.button.is-processing .button__text,
.button.is-successful .button__icon,
.button.is-successful .button__text,
.button.is-failed .button__icon,
.button.is-failed .button__text {
  opacity: 0;
}
.button[data-display='block'].is-processing .button__icon,
.button[data-display='block'].is-processing .button__text,
.button[data-display='block'].is-successful .button__icon,
.button[data-display='block'].is-successful .button__text,
.button[data-display='block'].is-failed .button__icon,
.button[data-display='block'].is-failed .button__text {
  opacity: 1;
}

$button-spinner-size: 1.125em;
$button-spinner-half-size: math.div($button-spinner-size, 2);

.button::after,
.button > .spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $button-spinner-size;
  height: $button-spinner-size;
  transform: translate(-50%, -50%);
}
.button > .spinner {
  @include spinner($button-spinner-size, $button-text-color);
}

.button[data-display='block']::after,
.button[data-display='block'] > .spinner {
  right: 0.5em;
  left: auto;
}

.button::after {
  content: '';
  background-position: 0 0;
  background-repeat: no-repeat;
}
.button.is-successful::after {
  background-image: svg-load('img/icons/ok.svg', fill=$button-text-color);
}
.button.is-failed::after {
  background-image: svg-load('img/icons/not-ok.svg', fill=$button-text-color);
}

.button.is-processing::after {
  display: none;
}

// Темы

.button_theme_link,
.button_theme_link-danger {
  padding-right: 0;
  padding-left: 0;
  background-color: transparent !important;
}
.button_theme_link {
  color: $brand-color;
}
.button_theme_link-danger {
  color: $danger-color;
}
/* stylelint-disable no-descending-specificity */

.button_theme_link > .button__text,
.button_theme_link-danger > .button__text {
  text-decoration: underline;
}

.button_theme_link::after,
.button_theme_link > .spinner {
  right: -0.5em;
}
.button_theme_link-danger::after,
.button_theme_link-danger > .spinner {
  right: -2rem;
}
.button_theme_link-danger > .spinner {
  @include spinner($button-spinner-size, $danger-color);
}
/* stylelint-enable no-descending-specificity */

.button_theme_link:not(:disabled):hover,
.button_theme_link:not(:disabled):focus-visible,
.button_theme_link-danger:not(:disabled):hover,
.button_theme_link-danger:not(:disabled):focus-visible {
  background-color: transparent;
}

.button_theme_link:not(:disabled):hover > .button__text,
.button_theme_link:not(:disabled):focus-visible > .button__text,
.button_theme_link-danger:not(:disabled):hover > .button__text,
.button_theme_link-danger:not(:disabled):focus-visible > .button__text {
  text-decoration: none;
}

.button_theme_circle {
  border-radius: 100%;
}

.button_theme_muted {
  background-color: $muted-color;
}
.button_theme_muted:not(:disabled):hover,
.button_theme_muted:not(:disabled):focus-visible {
  background-color: darken(desaturate($muted-color, 2.66), 5.49);
}

.button_theme_subtle {
  background-color: transparent;
  color: $text-color;
}
.button_theme_subtle:not(:disabled):hover,
.button_theme_subtle:not(:disabled):focus-visible {
  background-color: transparentize($text-color, 0.85);
}

.button_theme_morphed {
  background-color: $main-bg;
  color: $text-color;
}
.button_theme_morphed:not(:disabled):hover,
.button_theme_morphed:not(:disabled):focus-visible {
  background-color: lighten($main-bg, 10);
}

// Размеры (все размерности шрифтозависимы, потому можно просто поменять `font-size`)
.button_sizing_sm {
  font-size: $font-size-sm;
}
.button_sizing_md {
  font-size: $font-size-md;
}
.button_sizing_lg {
  font-size: $font-size-lg;
}
.button_sizing_xl {
  font-size: $font-size-xl;
}
